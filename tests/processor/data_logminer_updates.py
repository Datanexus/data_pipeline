import collections
import data_pipeline.constants.const as const

TestCase = collections.namedtuple('TestCase', "description input_table_name input_commit_statement input_primary_key_fields expected_set_values expected_sql")

tests=[
  TestCase(
    description="Simple",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3' where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": '3'}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3' WHERE AUTOGENERATED = '0'")

,  TestCase(
    description="Empty primary key fields",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3' where "AUTOGENERATED" = '0' and "ANOTHER_FIELD0" IS NULL and "ANOTHER_FIELD1" = 'foo'""", 
    input_primary_key_fields = '',
    expected_set_values={"FIELD0": '3'}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3' WHERE AUTOGENERATED = '0' AND ANOTHER_FIELD0 IS NULL AND ANOTHER_FIELD1 = 'foo'")

,  TestCase(
    description="Nopk primary key field",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3' where "AUTOGENERATED" = '0' and "ANOTHER_FIELD0" IS NULL and "ANOTHER_FIELD1" = 'foo'""", 
    input_primary_key_fields = const.NO_KEYFIELD_STR,
    expected_set_values={"FIELD0": '3'}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3' WHERE AUTOGENERATED = '0' AND ANOTHER_FIELD0 IS NULL AND ANOTHER_FIELD1 = 'foo'")

,  TestCase(
    description="Single primary key field not in WHERE clause",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3' where "AUTOGENERATED" = '0' and "ANOTHER_FIELD0" IS NULL and "ANOTHER_FIELD1" = 'foo'""", 
    input_primary_key_fields = "ID",
    expected_set_values={"FIELD0": '3'}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3' WHERE AUTOGENERATED = '0' AND ANOTHER_FIELD0 IS NULL AND ANOTHER_FIELD1 = 'foo'")

,  TestCase(
    description="Multiple primary key fields not in WHERE clause",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3' where "AUTOGENERATED" = '0' and "ANOTHER_FIELD0" IS NULL and "ANOTHER_FIELD1" = 'foo'""", 
    input_primary_key_fields = "ID, ID1",
    expected_set_values={"FIELD0": '3'}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3' WHERE AUTOGENERATED = '0' AND ANOTHER_FIELD0 IS NULL AND ANOTHER_FIELD1 = 'foo'")

, TestCase(
    description="Set field to null",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = NULL where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": None}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = NULL WHERE AUTOGENERATED = '0'")

, TestCase(
    description="Set non-null field followed by null field",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3', "FIELD1" = NULL where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": '3', "FIELD1": None}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3', FIELD1 = NULL WHERE AUTOGENERATED = '0'")

, TestCase(
    description="Set null field surrounded by non-null fields",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3', "FIELD1" = NULL, "FIELD2" = '4' where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": '3', "FIELD1": None, "FIELD2": '4'}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD2 = '4', FIELD0 = '3', FIELD1 = NULL WHERE AUTOGENERATED = '0'")

, TestCase(
    description="Set non-null field surrounded by null fields",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = NULL, "FIELD1" = '3', "FIELD2" = NULL where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": None, "FIELD1": '3', "FIELD2": None}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD2 = NULL, FIELD0 = NULL, FIELD1 = '3' WHERE AUTOGENERATED = '0'")

# EMPTY_CLOB
, TestCase(
    description="Set field to empty_clob",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = EMPTY_CLOB() where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": None}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = NULL WHERE AUTOGENERATED = '0'")

, TestCase(
    description="Set non-null field followed by empty_clob field",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3', "FIELD1" = EMPTY_CLOB() where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": '3', "FIELD1": None}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3', FIELD1 = NULL WHERE AUTOGENERATED = '0'")

, TestCase(
    description="Set empty_clob field surrounded by non-null fields",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3', "FIELD1" = EMPTY_CLOB(), "FIELD2" = '4' where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": '3', "FIELD1": None, "FIELD2": '4'}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD2 = '4', FIELD0 = '3', FIELD1 = NULL WHERE AUTOGENERATED = '0'")

, TestCase(
    description="Set non-null field surrounded by empty_clob fields",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = EMPTY_CLOB(), "FIELD1" = '3', "FIELD2" = EMPTY_CLOB() where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": None, "FIELD1": '3', "FIELD2": None}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD2 = NULL, FIELD0 = NULL, FIELD1 = '3' WHERE AUTOGENERATED = '0'")



, TestCase(
    description="Comma in set",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3,' where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": '3,'}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3,' WHERE AUTOGENERATED = '0'")

, TestCase(
    description="Comma and single quotes after value and before comma",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3'',' where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": "3',"}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3'',' WHERE AUTOGENERATED = '0'")

, TestCase(
    description="Trailing spaces at the end of redo statement",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3' where "AUTOGENERATED" = '0'       """, 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": "3"}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3' WHERE AUTOGENERATED = '0'")

, TestCase(
    description="Single quote inside value",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '''' where "AUTOGENERATED" = '0'       """, 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": "'"}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '''' WHERE AUTOGENERATED = '0'")

, TestCase(
    description="Single quote starting, followed by comma",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = ''',' where "AUTOGENERATED" = '0'       """, 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": "',"}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = ''',' WHERE AUTOGENERATED = '0'")

, TestCase(
    description="Function should be stripped",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = TO_TIMESTAMP('17-MAY-16 09.31.35.491000 AM') where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": "17-MAY-16 09.31.35.491000 AM"}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '17-MAY-16 09.31.35.491000 AM' WHERE AUTOGENERATED = '0'")

, TestCase(
    description="Non-PK function with two parameters should only accept the first parameter",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = TO_TIMESTAMP('17-MAY-16 09.31.35.491000 AM', 'YYYY-MM-DD HH24:MI:SS') where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": "17-MAY-16 09.31.35.491000 AM"}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '17-MAY-16 09.31.35.491000 AM' WHERE AUTOGENERATED = '0'")

, TestCase(
    description="Non-PK function with five parameters containing special chars should only accept the first parameter",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = TO_TIMESTAMP('17-MAY-16 09.31.35.491000 AM', 'YYYY-MM-DD HH24:MI:SS', 'param3withcomma,', '(param4withbrackets)', '(param5with,commas,andbracket')) where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": "17-MAY-16 09.31.35.491000 AM"}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '17-MAY-16 09.31.35.491000 AM' WHERE AUTOGENERATED = '0'")

, TestCase(
    description="PK function with two parameters should only accept the first parameter",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '0' where "AUTOGENERATED" = TO_TIMESTAMP('17-MAY-16 09.31.35.491000 AM', 'YYYY-MM-DD HH24:MI:SS')""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": "0"}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '0' WHERE AUTOGENERATED = '17-MAY-16 09.31.35.491000 AM'")

, TestCase(
    description="PK function with five parameters containing special chars should only accept the first parameter",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '0' where "AUTOGENERATED" = TO_TIMESTAMP('17-MAY-16 09.31.35.491000 AM', 'YYYY-MM-DD HH24:MI:SS', 'param3withcomma,', '(param4withbrackets)', '(param5with,commas,andbracket'))""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": "0"}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '0' WHERE AUTOGENERATED = '17-MAY-16 09.31.35.491000 AM'")

, TestCase(
    description="Empty PK statement containing function with two parameters should only accept the first parameter",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '0' where "AUTOGENERATED" = TO_TIMESTAMP('17-MAY-16 09.31.35.491000 AM', 'YYYY-MM-DD HH24:MI:SS')""", 
    input_primary_key_fields = "",
    expected_set_values={"FIELD0": "0"}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '0' WHERE AUTOGENERATED = '17-MAY-16 09.31.35.491000 AM'")

, TestCase(
    description="NOPK statement containing function with five parameters containing special chars should only accept the first parameter",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '0' where "AUTOGENERATED" = TO_TIMESTAMP('17-MAY-16 09.31.35.491000 AM', 'YYYY-MM-DD HH24:MI:SS', 'param3withcomma,', '(param4withbrackets)', '(param5with,commas,andbracket'))""", 
    input_primary_key_fields = const.NO_KEYFIELD_STR,
    expected_set_values={"FIELD0": "0"}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '0' WHERE AUTOGENERATED = '17-MAY-16 09.31.35.491000 AM'")

, TestCase(
    description="Function string within quotes should not be stripped",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = 'TO_TIMESTAMP(17-MAY-16 09.31.35.491000 AM)' where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": "TO_TIMESTAMP(17-MAY-16 09.31.35.491000 AM)"}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = 'TO_TIMESTAMP(17-MAY-16 09.31.35.491000 AM)' WHERE AUTOGENERATED = '0'")

, TestCase(
    description="WHERE clause ending with IS NULL",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3' where "AUTOGENERATED" = '0' and "ESCALATIONDATE" IS NULL""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": '3'}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3' WHERE AUTOGENERATED = '0'")

, TestCase(
    description="WHERE clause beginning with IS NULL",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3' where "ESCALATIONDATE" IS NULL and "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": '3'}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3' WHERE AUTOGENERATED = '0'")

, TestCase(
    description="WHERE clause with IS NULL primary key should still use the full WHERE clause",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3' where "ESCALATIONDATE" IS NULL and "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED, ESCALATIONDATE",
    expected_set_values={"FIELD0": '3'}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3' WHERE AUTOGENERATED = '0' AND ESCALATIONDATE IS NULL")

, TestCase(
    description="where keyword in set",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3 where ' where "AUTOGENERATED" = '0'""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": '3 where '}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3 where ' WHERE AUTOGENERATED = '0'")

, TestCase(
    description="where keyword in where clause",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3' where "AUTOGENERATED" = ' where '""", 
    input_primary_key_fields = "AUTOGENERATED",
    expected_set_values={"FIELD0": '3'}, 
    expected_sql="UPDATE MY_TABLE_3 SET FIELD0 = '3' WHERE AUTOGENERATED = ' where '")

, TestCase(
    description="String with everything put together",
    input_table_name="MY_TABLE_3", 
    input_commit_statement="""update "MY_SCHEMA"."MY_TABLE_3" set "FIELD0" = '3'',,''', "FIELD1" = 'FUNCTIONLOOKALIKE(''a function call'')', "FIELD2" = ' where "', "FIELD3" = TO_TIMESTAMP(','',A value in function,''') where "ESCALATIONDATE" IS NULL and "AUTOGENERATED" = '0' and "FIELD0" IS NULL and "FIELD1" = 'Something'', ''WITH_A_FUNCTION_LOOKALIKE(''something'')' and "FIELD2" = TO_TIMESTAMP('timestamp') and "FIELD3" = ANOTHER_FUNCTION('another function #value","')""", 
    input_primary_key_fields = "FIELD3, FIELD1, FIELD2",
    expected_set_values={"FIELD0": "3',,'", "FIELD1": "FUNCTIONLOOKALIKE('a function call')", "FIELD2": ' where "', "FIELD3": ",',A value in function,'"}, 
    expected_sql='UPDATE MY_TABLE_3 SET FIELD2 = \' where "\', FIELD3 = \',\'\',A value in function,\'\'\', FIELD0 = \'3\'\',,\'\'\', FIELD1 = \'FUNCTIONLOOKALIKE(\'\'a function call\'\')\' WHERE FIELD2 = \'timestamp\' AND FIELD3 = \'another function #value","\' AND FIELD1 = \'Something\'\', \'\'WITH_A_FUNCTION_LOOKALIKE(\'\'something\'\')\'')

]
